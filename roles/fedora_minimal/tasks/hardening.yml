---
# hardening
#
#

- name: Disable Host-Based Authentication /1
  lineinfile:
    create: no
    path: /etc/ssh/sshd_config
    regexp: (?i)^\s*HostbasedAuthentication yes\s+
    state: absent
  become: yes
- name: Disable Host-Based Authentication /2
  lineinfile:
    create: yes
    insertbefore: ^[#\s]*Match
    line: HostbasedAuthentication no
    path: /etc/ssh/sshd_config
    state: present
    validate: /usr/sbin/sshd -t -f %s
  become: yes

- name: Disable SSH Root Login /1
  lineinfile:
    create: no
    path: /etc/ssh/sshd_config
    regexp: (?i)^\s*PermitRootLogin yes\s+
    state: absent
  become: yes
- name: Disable SSH Root Login /2
  lineinfile:
    create: yes
    insertbefore: ^[#\s]*Match
    line: PermitRootLogin no
    path: /etc/ssh/sshd_config
    state: present
    validate: /usr/sbin/sshd -t -f %s
  become: yes

- name: Disable coredump storage
  blockinfile:
    path: /etc/systemd/coredump.conf.d/coredump_hardening.conf
    create: yes
    block: |
      [Coredump]
      Storage=none
  become: yes

- name: Get mounts from /etc/mtab
  shell: cat /etc/mtab
  changed_when: no
  register: mount_options
- name: Ensure fstab uses nodev
  mount:
    path: "{{ item.split(' ')[1] }}"
    state: mounted
    fstype: "{{ item.split(' ')[2] }}"
    src: "{{ item.split(' ')[0] }}"
    opts: "{{ item.split(' ')[3].split(',') | union(['nodev']) | unique | join(',') }}"
  with_items: "{{ mount_options.stdout_lines }}"
  when:
    - item.split(" ")[1] in  ["/boot" , "/dev/shm", "/home", "/tmp", "/var", "/var/tmp", "/var/log", "/proc"]
  become: yes

- name: Get mounts from /etc/mtab
  shell: cat /etc/mtab
  changed_when: no
  register: mount_options
- name: Ensure fstab uses noexec
  mount:
    path: "{{ item.split(' ')[1] }}"
    state: mounted
    fstype: "{{ item.split(' ')[2] }}"
    src: "{{ item.split(' ')[0] }}"
    opts: "{{ item.split(' ')[3].split(',') | union(['noexec']) | unique | join(',') }}"
  with_items: "{{ mount_options.stdout_lines }}"
  when:
    - item.split(" ")[1] in ["/boot" , "/dev/shm", "/tmp", "/var", "/var/tmp", "/var/log", "/proc"]
  become: yes

- name: Get mounts from /etc/mtab
  shell: cat /etc/mtab
  changed_when: no
  register: mount_options
- name: Ensure fstab uses nosuid
  mount:
    path: "{{ item.split(' ')[1] }}"
    state: mounted
    fstype: "{{ item.split(' ')[2] }}"
    src: "{{ item.split(' ')[0] }}"
    opts: "{{ item.split(' ')[3].split(',') | union(['nosuid']) | unique | join(',') }}"
  with_items: "{{ mount_options.stdout_lines }}"
  when:
    - item.split(" ")[1] in ["/boot" , "/dev/shm", "/tmp", "/var", "/var/tmp", "/var/log", "/proc"]
  become: yes

- name: Selinux Enforcing
  selinux:
    policy: targeted
    state: enforcing
  become: yes
  when: ansible_os_family == "Redhat"

- name: Fix folder permissions
  file:
    path: '{{ item }}'
    state: directory
    mode: '0700'
  with_items:
    - /boot
    - /lib/modules
    - /usr/lib/modules
    - /usr/src
    - "{{ ansible_env.HOME }}"
  become: yes

- name: Find Unauthorized World-Writable Files
  shell: |
    find -L {{ item }} -perm /go+w -type f -exec chmod go-w {} \;
  with_items:
    - /bin
    - /sbin
    - /usr/bin
    - /usr/local/bin
    - /usr/local/sbin
    - /usr/sbin
  changed_when: no
  become: yes

- name: disable securetty
  copy:
    dest: /etc/securetty
    group: root
    mode: '0400'
    owner: root
    content: ""
    force: no
  become: yes

- name: disable su binary for non-sudo users
  file:
    dest: /bin/su
    group: root
    mode: '0750'
    owner: root
  become: yes

- name: create limits.d-directory
  file:
    group: root
    mode: '0755'
    owner: root
    path: /etc/security/limits.d
    state: directory
  become: yes

- name: create ulimit hardening file
  pam_limits:
    dest: /etc/security/limits.d/hardening.conf
    domain: '*'
    limit_item: core
    limit_type: hard
    value: '0'
  become: yes

- name: create ulimit hardening file
  pam_limits:
    dest: /etc/security/limits.d/hardening.conf
    domain: '*'
    limit_item: core
    limit_type: soft
    value: '0'
  become: yes

- name: Limit max number of concurrent logins
  pam_limits:
    dest: /etc/security/limits.d/hardening.conf
    domain: '*'
    limit_item: maxlogins
    limit_type: hard
    value: '10'
  become: yes

- name: change /etc/ files ownership to restrict access
  file:
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
    owner: '{{ item.owner }}'
    path: '{{ item.path }}'
  with_items:
    - {path: /etc/group, owner: root, group: root, mode: '0644'}
    - {path: /etc/gshadow, owner: root, group: root, mode: '0000'}
    - {path: /etc/login.defs, owner: root, group: root, mode: '0444'}
    - {path: /etc/passwd, owner: root, group: root, mode: '0644'}
    - {path: /etc/security/limits.d/hardening.conf, owner: root, group: root, mode: '0440'}
    - {path: /etc/shadow, owner: root, group: root, mode: '0000'}
    - {path: /etc/sysctl.conf, owner: root, group: root, mode: '0440'}
  become: yes

- name: Update the profiles file with personal variables
  lineinfile:
    backup: yes
    line: '{{ item }}'
    path: /etc/profile
    regexp: '{{ item }}'
    state: present
  with_items:
    - umask 027
    - ulimit -S -c 0
  become: yes

- name: Set umask
  replace:
    path: /etc/login.defs
    regexp: '^UMASK.*022$'
    replace: 'UMASK    027'
    backup: yes
  become: yes

- name: Set umask
  replace:
    path: "{{ item }}"
    regexp: 'umask.*022$'
    replace: 'umask 027'
    backup: yes
  with_items:
    - /etc/bashrc
    - /etc/csh.cshrc
  become: yes

- name: Remove group/others from user directory
  shell: |
    find {{ ansible_env.HOME }} -type d -exec chmod go-rwx {} \;
  changed_when: no

- name: Set sysctl variables
  sysctl:
    ignoreerrors: yes
    name: '{{ item.name }}'
    reload: yes
    state: present
    sysctl_set: yes
    value: '{{ item.value }}'
  with_items:
    - {name: dev.tty.ldisc_autoload, value: 0}
    - {name: fs.protected_fifos, value: 2}
    - {name: fs.protected_hardlinks, value: 1}
    - {name: fs.protected_regular, value: 2}
    - {name: fs.protected_symlinks, value: 1}
    - {name: fs.suid_dumpable, value: 0}
    - {name: kernel.core_pattern, value: '|/bin/false'}
    - {name: kernel.core_uses_pid, value: 1}
    - {name: kernel.ctrl-alt-del, value: 0}
    - {name: kernel.dmesg_restrict, value: 1}
    - {name: kernel.kexec_load_disabled, value: 1}
    - {name: kernel.kptr_restrict, value: 1}
    - {name: kernel.msgmax, value: 65535}
    - {name: kernel.msgmnb, value: 65535}
    - {name: kernel.perf_event_paranoid, value: 3}
    - {name: kernel.randomize_va_space, value: 2}
    - {name: kernel.sysrq, value: 4}
    - {name: kernel.unprivileged_bpf_disabled, value: 1}
    - {name: kernel.yama.ptrace_scope, value: 2}
    - {name: net.core.bpf_jit_harden, value: 2}
    - {name: net.core.default_qdisc, value: fq}
    - {name: net.core.dev_weight, value: 64}
    - {name: net.core.netdev_max_backlog, value: 16384}
    - {name: net.core.optmem_max, value: 65535}
    - {name: net.core.rmem_default, value: 262144}
    - {name: net.core.rmem_max, value: 16777216}
    - {name: net.core.somaxconn, value: 32768}
    - {name: net.core.wmem_default, value: 262144}
    - {name: net.core.wmem_max, value: 16777216}
    - {name: net.ipv4.conf.all.accept_source_route, value: 0}
    - {name: net.ipv4.conf.all.bootp_relay, value: 0}
    - {name: net.ipv4.conf.all.log_martians, value: 1}
    - {name: net.ipv4.conf.all.proxy_arp, value: 0}
    - {name: net.ipv4.conf.all.rp_filter, value: 1}
    - {name: net.ipv4.conf.all.secure_redirects, value: 0}
    - {name: net.ipv4.conf.all.send_redirects, value: 0}
    - {name: net.ipv4.conf.default.accept_redirects, value: 0}
    - {name: net.ipv4.conf.default.accept_source_route, value: 0}
    - {name: net.ipv4.conf.default.log_martians, value: 1}
    - {name: net.ipv4.conf.default.rp_filter, value: 1}
    - {name: net.ipv4.conf.default.secure_redirects, value: 0}
    - {name: net.ipv4.conf.default.send_redirects, value: 0}
    - {name: net.ipv4.conf.lo.accept_redirects, value: 0}
    - {name: net.ipv4.conf.lo.accept_source_route, value: 0}
    - {name: net.ipv4.conf.lo.log_martians, value: 0}
    - {name: net.ipv4.conf.lo.rp_filter, value: 1}
    - {name: net.ipv4.icmp_ignore_bogus_error_responses, value: 1}
    - {name: net.ipv4.ip_forward, value: 0}
    - {name: net.ipv4.ip_local_port_range, value: 2000 65000}
    - {name: net.ipv4.neigh.default.gc_interval, value: 30}
    - {name: net.ipv4.neigh.default.gc_thresh1, value: 32}
    - {name: net.ipv4.neigh.default.gc_thresh2, value: 1024}
    - {name: net.ipv4.neigh.default.gc_thresh3, value: 2048}
    - {name: net.ipv4.neigh.default.proxy_qlen, value: 96}
    - {name: net.ipv4.neigh.default.unres_qlen, value: 6}
    - {name: net.ipv4.tcp_congestion_control, value: htcp}
    - {name: net.ipv4.tcp_ecn, value: 1}
    - {name: net.ipv4.tcp_fastopen, value: 3}
    - {name: net.ipv4.tcp_fin_timeout, value: 15}
    - {name: net.ipv4.tcp_keepalive_intvl, value: 15}
    - {name: net.ipv4.tcp_keepalive_probes, value: 5}
    - {name: net.ipv4.tcp_keepalive_time, value: 1800}
    - {name: net.ipv4.tcp_max_orphans, value: 16384}
    - {name: net.ipv4.tcp_max_syn_backlog, value: 2048}
    - {name: net.ipv4.tcp_max_tw_buckets, value: 1440000}
    - {name: net.ipv4.tcp_moderate_rcvbuf, value: 1}
    - {name: net.ipv4.tcp_no_metrics_save, value: 1}
    - {name: net.ipv4.tcp_orphan_retries, value: 0}
    - {name: net.ipv4.tcp_reordering, value: 3}
    - {name: net.ipv4.tcp_retries1, value: 3}
    - {name: net.ipv4.tcp_retries2, value: 15}
    - {name: net.ipv4.tcp_rfc1337, value: 1}
    - {name: net.ipv4.tcp_rmem, value: 8192 87380 16777216}
    - {name: net.ipv4.tcp_sack, value: 0}
    - {name: net.ipv4.tcp_slow_start_after_idle, value: 0}
    - {name: net.ipv4.tcp_syn_retries, value: 5}
    - {name: net.ipv4.tcp_synack_retries, value: 5}
    - {name: net.ipv4.tcp_syncookies, value: 1}
    - {name: net.ipv4.tcp_timestamps, value: 1}
    - {name: net.ipv4.tcp_tw_reuse, value: 1}
    - {name: net.ipv4.tcp_window_scaling, value: 0}
    - {name: net.ipv4.tcp_wmem, value: 8192 65536 16777216}
    - {name: net.ipv4.udp_rmem_min, value: 16384}
    - {name: net.ipv4.udp_wmem_min, value: 16384}
    - {name: net.ipv6.conf.all.accept_ra, value: 0}
    - {name: net.ipv6.conf.all.accept_redirects, value: 0}
    - {name: net.ipv6.conf.all.accept_source_route, value: 0}
    - {name: net.ipv6.conf.all.autoconf, value: 0}
    - {name: net.ipv6.conf.all.use_tempaddr, value: 2}
    - {name: net.ipv6.conf.default.accept_ra, value: 0}
    - {name: net.ipv6.conf.default.accept_ra_defrtr, value: 0}
    - {name: net.ipv6.conf.default.accept_ra_pinfo, value: 0}
    - {name: net.ipv6.conf.default.accept_ra_rtr_pref, value: 0}
    - {name: net.ipv6.conf.default.accept_redirects, value: 0}
    - {name: net.ipv6.conf.default.accept_source_route, value: 0}
    - {name: net.ipv6.conf.default.autoconf, value: 0}
    - {name: net.ipv6.conf.default.dad_transmits, value: 0}
    - {name: net.ipv6.conf.default.max_addresses, value: 1}
    - {name: net.ipv6.conf.default.router_solicitations, value: 0}
    - {name: net.ipv6.conf.default.use_tempaddr, value: 2}
    - {name: net.unix.max_dgram_qlen, value: 50}
    - {name: vm.mmap_min_addr, value: 4096}
    - {name: vm.mmap_rnd_bits, value: 32}
    - {name: vm.mmap_rnd_compat_bits, value: 16}
    - {name: vm.overcommit_memory, value: 0}
    - {name: vm.overcommit_ratio, value: 50}
    - {name: vm.unprivileged_userfaultfd, value: 0}
  become: yes

- name: Deploy Grub Flags
  replace:
    path: /etc/default/grub
    regexp: 'rhgb quiet'
    replace: 'rhgb slab_nomerge quiet'
    backup: yes
  register: grub_setup_1
  become: yes

- name: Deploy Grub Flags
  replace:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ item.option | regex_escape }}=).)*)(?:[" ]{{ item.option | regex_escape }}=\S+)?(.*")$'
    replace: '\1 {{ item.option }}={{ item.value }}\2'
    backup: yes
  with_items:
    - {option: amd_iommu, value: 'on'}
    - {option: debugfs, value: 'off'}
    - {option: init_on_alloc, value: 1}
    - {option: init_on_free, value: 1}
    - {option: intel_iommu, value: 'on'}
    - {option: l1tf, value: flush}
    - {option: lockdown, value: confidentiality}
    - {option: loglevel, value: 0}
    - {option: mce, value: 0}
    - {option: mds, value: full}
    - {option: mitigations, value: auto}
    - {option: modules.sig_enforce, value: 1}
    - {option: page_alloc.shuffle, value: 1}
    - {option: page_poison, value: 1}
    - {option: pti, value: 'on'}
    - {option: security, value: selinux}
    - {option: selinux, value: 1}
    - {option: slub_debug, value: FZP}
    - {option: spec_store_bypass_disable, value: 'on'}
    - {option: tsx, value: 'off'}
    - {option: tsx_async_abort, value: full}
    - {option: vsyscall, value: 'none'}
  register: grub_setup_2
  become: yes

- name: Use jitterentropy_rng
  blockinfile:
    path: /etc/modules-load.d/jitterentropy_rng.conf
    create: yes
    block: |
      jitterentropy_rng
  become: yes

- name: Update Grub and Initramfs
  command: '{{ item }}'
  with_items:
    - 'grub2-mkconfig -o /boot/grub2/grub.cfg'
    - 'dracut --force --regenerate-all -v'
  become: yes
  when: grub_setup_1.changed or grub_setup_2.changed

...
